public final class io/mehow/laboratory/generator/Deprecation {
	public fun <init> (Ljava/lang/String;Lkotlin/DeprecationLevel;)V
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/DeprecationLevel;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lkotlin/DeprecationLevel;
	public final fun copy (Ljava/lang/String;Lkotlin/DeprecationLevel;)Lio/mehow/laboratory/generator/Deprecation;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/Deprecation;Ljava/lang/String;Lkotlin/DeprecationLevel;ILjava/lang/Object;)Lio/mehow/laboratory/generator/Deprecation;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLevel ()Lkotlin/DeprecationLevel;
	public final fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/FeatureFactoryModel {
	public final fun generate (Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
	public final fun prepare (Ljava/lang/String;)Lcom/squareup/kotlinpoet/FileSpec;
}

public final class io/mehow/laboratory/generator/FeatureFactoryModel$Builder {
	public fun <init> (Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;)V
	public final fun build ()Larrow/core/Either;
	public final fun copy (Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;)Lio/mehow/laboratory/generator/FeatureFactoryModel$Builder;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/FeatureFactoryModel$Builder;Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;ILjava/lang/Object;)Lio/mehow/laboratory/generator/FeatureFactoryModel$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/FeatureFlagModel {
	public fun equals (Ljava/lang/Object;)Z
	public final fun generate (Ljava/io/File;)Ljava/io/File;
	public fun hashCode ()I
	public final fun prepare ()Lcom/squareup/kotlinpoet/FileSpec;
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/FeatureFlagModel$Builder {
	public fun <init> (Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Lio/mehow/laboratory/generator/Deprecation;Lio/mehow/laboratory/generator/Supervisor;Ljava/lang/String;)V
	public synthetic fun <init> (Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Lio/mehow/laboratory/generator/Deprecation;Lio/mehow/laboratory/generator/Supervisor;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Larrow/core/Either;
	public final fun copy (Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Lio/mehow/laboratory/generator/Deprecation;Lio/mehow/laboratory/generator/Supervisor;Ljava/lang/String;)Lio/mehow/laboratory/generator/FeatureFlagModel$Builder;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/FeatureFlagModel$Builder;Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Lio/mehow/laboratory/generator/Deprecation;Lio/mehow/laboratory/generator/Supervisor;Ljava/lang/String;ILjava/lang/Object;)Lio/mehow/laboratory/generator/FeatureFlagModel$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/FeatureFlagModelKt {
	public static final fun sourceModels (Ljava/util/List;)Ljava/util/List;
	public static final fun sourceNames (Ljava/util/List;)Ljava/util/List;
}

public final class io/mehow/laboratory/generator/FeatureFlagOption {
	public fun <init> (Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun copy (Ljava/lang/String;Z)Lio/mehow/laboratory/generator/FeatureFlagOption;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/FeatureFlagOption;Ljava/lang/String;ZILjava/lang/Object;)Lio/mehow/laboratory/generator/FeatureFlagOption;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isDefault ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/mehow/laboratory/generator/GenerationFailure {
	public abstract fun getMessage ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/GenerationFailure$DuplicateKeys : io/mehow/laboratory/generator/GenerationFailure {
	public fun <init> (Ljava/util/Map;)V
	public final fun copy (Ljava/util/Map;)Lio/mehow/laboratory/generator/GenerationFailure$DuplicateKeys;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/GenerationFailure$DuplicateKeys;Ljava/util/Map;ILjava/lang/Object;)Lio/mehow/laboratory/generator/GenerationFailure$DuplicateKeys;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/GenerationFailure$InvalidDefaultOption : io/mehow/laboratory/generator/GenerationFailure {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lio/mehow/laboratory/generator/GenerationFailure$InvalidDefaultOption;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/GenerationFailure$InvalidDefaultOption;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lio/mehow/laboratory/generator/GenerationFailure$InvalidDefaultOption;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/GenerationFailure$MissingOption : io/mehow/laboratory/generator/GenerationFailure {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lio/mehow/laboratory/generator/GenerationFailure$MissingOption;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/GenerationFailure$MissingOption;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/mehow/laboratory/generator/GenerationFailure$MissingOption;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/GenerationFailure$NoOption : io/mehow/laboratory/generator/GenerationFailure {
	public fun <init> (Ljava/lang/String;)V
	public final fun copy (Ljava/lang/String;)Lio/mehow/laboratory/generator/GenerationFailure$NoOption;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/GenerationFailure$NoOption;Ljava/lang/String;ILjava/lang/Object;)Lio/mehow/laboratory/generator/GenerationFailure$NoOption;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/GenerationFailure$SelfSupervision : io/mehow/laboratory/generator/GenerationFailure {
	public fun <init> (Ljava/lang/String;)V
	public final fun copy (Ljava/lang/String;)Lio/mehow/laboratory/generator/GenerationFailure$SelfSupervision;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/GenerationFailure$SelfSupervision;Ljava/lang/String;ILjava/lang/Object;)Lio/mehow/laboratory/generator/GenerationFailure$SelfSupervision;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/OptionFactoryModel {
	public final fun prepare ()Lcom/squareup/kotlinpoet/FileSpec;
}

public final class io/mehow/laboratory/generator/OptionFactoryModel$Builder {
	public fun <init> (Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;)V
	public final fun build ()Larrow/core/Either;
	public final fun copy (Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;)Lio/mehow/laboratory/generator/OptionFactoryModel$Builder;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/OptionFactoryModel$Builder;Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;ILjava/lang/Object;)Lio/mehow/laboratory/generator/OptionFactoryModel$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/SourcedFeatureStorageModel {
	public final fun generate (Ljava/io/File;)Ljava/io/File;
	public final fun prepare ()Lcom/squareup/kotlinpoet/FileSpec;
}

public final class io/mehow/laboratory/generator/SourcedFeatureStorageModel$Builder {
	public fun <init> (Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;)V
	public final fun build ()Larrow/core/Either;
	public final fun copy (Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;)Lio/mehow/laboratory/generator/SourcedFeatureStorageModel$Builder;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/SourcedFeatureStorageModel$Builder;Lio/mehow/laboratory/generator/Visibility;Lcom/squareup/kotlinpoet/ClassName;Ljava/util/List;ILjava/lang/Object;)Lio/mehow/laboratory/generator/SourcedFeatureStorageModel$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/Supervisor {
}

public final class io/mehow/laboratory/generator/Supervisor$Builder {
	public fun <init> (Lio/mehow/laboratory/generator/FeatureFlagModel;Lio/mehow/laboratory/generator/FeatureFlagOption;)V
	public final fun build ()Larrow/core/Either;
	public final fun copy (Lio/mehow/laboratory/generator/FeatureFlagModel;Lio/mehow/laboratory/generator/FeatureFlagOption;)Lio/mehow/laboratory/generator/Supervisor$Builder;
	public static synthetic fun copy$default (Lio/mehow/laboratory/generator/Supervisor$Builder;Lio/mehow/laboratory/generator/FeatureFlagModel;Lio/mehow/laboratory/generator/FeatureFlagOption;ILjava/lang/Object;)Lio/mehow/laboratory/generator/Supervisor$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mehow/laboratory/generator/Visibility : java/lang/Enum {
	public static final field Internal Lio/mehow/laboratory/generator/Visibility;
	public static final field Public Lio/mehow/laboratory/generator/Visibility;
	public static fun valueOf (Ljava/lang/String;)Lio/mehow/laboratory/generator/Visibility;
	public static fun values ()[Lio/mehow/laboratory/generator/Visibility;
}

